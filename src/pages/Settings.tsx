import { useState } from "react";
import { User, Bell, Palette, Shield, Database, Save, Bot, Sparkles } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import { Switch } from "@/components/ui/switch";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Separator } from "@/components/ui/separator";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { useAuth } from "@/hooks/useAuth";
import { useToast } from "@/hooks/use-toast";
import { useTranslation } from "@/hooks/useTranslation";

export default function Settings() {
  const { user } = useAuth();
  const { toast } = useToast();
  const { t } = useTranslation();
  
  // Mock user settings - will be replaced with real data from Supabase
  const [settings, setSettings] = useState({
    profile: {
      displayName: user?.user_metadata?.display_name || "",
      bio: "",
      avatarUrl: user?.user_metadata?.avatar_url || ""
    },
    notifications: {
      emailNotifications: true,
      pushNotifications: false,
      aiGenerationComplete: true,
      projectUpdates: true,
      weeklyDigest: false
    },
    preferences: {
      defaultAiService: "suno",
      autoSaveProjects: true,
      darkMode: false
    },
    ai: {
      provider: "openai",
      model: "gpt-4o-mini",
      customPrompt: "–¢—ã –æ–ø—ã—Ç–Ω—ã–π –º—É–∑—ã–∫–∞–ª—å–Ω—ã–π –ø—Ä–æ–¥—é—Å–µ—Ä –∏ A&R. –ü–æ–º–æ–≥–∏ —Å–æ–∑–¥–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∞—Ä—Ç–∏—Å—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –µ–≥–æ –∏–º–µ–Ω–∏ –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞. –í–∫–ª—é—á–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∂–∞–Ω—Ä–µ, –ª–æ–∫–∞—Ü–∏–∏, –ø—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏–∏, –º—É–∑—ã–∫–∞–ª—å–Ω–æ–º —Å—Ç–∏–ª–µ –∏ –≤–ª–∏—è–Ω–∏—è—Ö.",
      maxTokens: 1000,
      temperature: 0.7
    }
  });

  const handleSave = (section: string) => {
    // TODO: Implement save to Supabase
    toast({
      title: "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã",
      description: `–í–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ${section} –±—ã–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã.`,
    });
  };

  const updateSetting = (section: keyof typeof settings, key: string, value: any) => {
    setSettings(prev => ({
      ...prev,
      [section]: {
        ...prev[section],
        [key]: value
      }
    }));
  };

  return (
    <div className="space-y-6 animate-fade-in">
      {/* Header */}
      <div>
        <h1 className="text-3xl font-bold">{t("settingsTitle")}</h1>
        <p className="text-muted-foreground">–£–ø—Ä–∞–≤–ª—è–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</p>
      </div>

      <Tabs defaultValue="profile" className="space-y-6">
        <TabsList className="grid w-full grid-cols-2 sm:grid-cols-3 lg:grid-cols-5">
          <TabsTrigger value="profile" className="flex items-center gap-1 text-xs sm:text-sm">
            <User className="h-3 w-3 sm:h-4 sm:w-4" />
            <span className="hidden sm:inline">–ü—Ä–æ—Ñ–∏–ª—å</span>
            <span className="sm:hidden">–Ø</span>
          </TabsTrigger>
          <TabsTrigger value="notifications" className="flex items-center gap-1 text-xs sm:text-sm">
            <Bell className="h-3 w-3 sm:h-4 sm:w-4" />
            <span className="hidden sm:inline">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</span>
            <span className="sm:hidden">üîî</span>
          </TabsTrigger>
          <TabsTrigger value="preferences" className="flex items-center gap-1 text-xs sm:text-sm">
            <Palette className="h-3 w-3 sm:h-4 sm:w-4" />
            <span className="hidden sm:inline">–ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è</span>
            <span className="sm:hidden">‚öôÔ∏è</span>
          </TabsTrigger>
          <TabsTrigger value="ai" className="flex items-center gap-1 text-xs sm:text-sm">
            <Bot className="h-3 w-3 sm:h-4 sm:w-4" />
            <span className="hidden sm:inline">–ò–ò</span>
            <span className="sm:hidden">ü§ñ</span>
          </TabsTrigger>
          <TabsTrigger value="security" className="flex items-center gap-1 text-xs sm:text-sm">
            <Shield className="h-3 w-3 sm:h-4 sm:w-4" />
            <span className="hidden sm:inline">–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</span>
            <span className="sm:hidden">üîí</span>
          </TabsTrigger>
        </TabsList>

        <TabsContent value="profile" className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ—Ñ–∏–ª—è</CardTitle>
              <CardDescription>
                –û–±–Ω–æ–≤–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–æ—Ñ–∏–ª—è –∏ —Ç–æ, –∫–∞–∫ –¥—Ä—É–≥–∏–µ –≤–∏–¥—è—Ç –≤–∞—Å –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="grid gap-4 md:grid-cols-2">
                <div className="space-y-2">
                  <Label htmlFor="email">Email</Label>
                  <Input
                    id="email"
                    value={user?.email || ""}
                    disabled
                    className="bg-muted"
                  />
                  <p className="text-xs text-muted-foreground">
                    Email –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å –∑–¥–µ—Å—å. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.
                  </p>
                </div>
                
                <div className="space-y-2">
                  <Label htmlFor="displayName">–û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è</Label>
                  <Input
                    id="displayName"
                    value={settings.profile.displayName}
                    onChange={(e) => updateSetting('profile', 'displayName', e.target.value)}
                    placeholder="–í–∞—à–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è"
                  />
                </div>
              </div>

              <div className="space-y-2">
                <Label htmlFor="bio">–ë–∏–æ–≥—Ä–∞—Ñ–∏—è</Label>
                <Textarea
                  id="bio"
                  value={settings.profile.bio}
                  onChange={(e) => updateSetting('profile', 'bio', e.target.value)}
                  placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ –∏ –≤–∞—à–µ–π –º—É–∑—ã–∫–µ..."
                  className="min-h-[100px] resize-none"
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="avatarUrl">URL –∞–≤–∞—Ç–∞—Ä–∞</Label>
                <Input
                  id="avatarUrl"
                  value={settings.profile.avatarUrl}
                  onChange={(e) => updateSetting('profile', 'avatarUrl', e.target.value)}
                  placeholder="https://example.com/avatar.jpg"
                />
              </div>

              <Button onClick={() => handleSave('–ø—Ä–æ—Ñ–∏–ª—è')}>
                <Save className="mr-2 h-4 w-4" />
                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
              </Button>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="notifications" className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</CardTitle>
              <CardDescription>
                –í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="space-y-4">
                <div className="flex items-center justify-between">
                  <div className="space-y-0.5">
                    <Label htmlFor="emailNotifications">Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</Label>
                    <p className="text-sm text-muted-foreground">
                      –ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç–µ
                    </p>
                  </div>
                  <Switch
                    id="emailNotifications"
                    checked={settings.notifications.emailNotifications}
                    onCheckedChange={(checked) => updateSetting('notifications', 'emailNotifications', checked)}
                  />
                </div>

                <Separator />

                <div className="flex items-center justify-between">
                  <div className="space-y-0.5">
                    <Label htmlFor="pushNotifications">Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</Label>
                    <p className="text-sm text-muted-foreground">
                      –ü–æ–ª—É—á–∞—Ç—å push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ
                    </p>
                  </div>
                  <Switch
                    id="pushNotifications"
                    checked={settings.notifications.pushNotifications}
                    onCheckedChange={(checked) => updateSetting('notifications', 'pushNotifications', checked)}
                  />
                </div>

                <Separator />

                <div className="flex items-center justify-between">
                  <div className="space-y-0.5">
                    <Label htmlFor="aiGenerationComplete">–ò–ò –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞</Label>
                    <p className="text-sm text-muted-foreground">
                      –£–≤–µ–¥–æ–º–ª—è—Ç—å –∫–æ–≥–¥–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –º—É–∑—ã–∫–∏ –ò–ò –∑–∞–≤–µ—Ä—à–µ–Ω–∞
                    </p>
                  </div>
                  <Switch
                    id="aiGenerationComplete"
                    checked={settings.notifications.aiGenerationComplete}
                    onCheckedChange={(checked) => updateSetting('notifications', 'aiGenerationComplete', checked)}
                  />
                </div>

                <div className="flex items-center justify-between">
                  <div className="space-y-0.5">
                    <Label htmlFor="projectUpdates">–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤</Label>
                    <p className="text-sm text-muted-foreground">
                      –£–≤–µ–¥–æ–º–ª—è—Ç—å –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ –∫–æ–ª–ª–∞–±–æ—Ä–∞—Ü–∏—è—Ö
                    </p>
                  </div>
                  <Switch
                    id="projectUpdates"
                    checked={settings.notifications.projectUpdates}
                    onCheckedChange={(checked) => updateSetting('notifications', 'projectUpdates', checked)}
                  />
                </div>

                <div className="flex items-center justify-between">
                  <div className="space-y-0.5">
                    <Label htmlFor="weeklyDigest">–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è —Å–≤–æ–¥–∫–∞</Label>
                    <p className="text-sm text-muted-foreground">
                      –ü–æ–ª—É—á–∞—Ç—å –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—É—é —Å–≤–æ–¥–∫—É –≤–∞—à–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
                    </p>
                  </div>
                  <Switch
                    id="weeklyDigest"
                    checked={settings.notifications.weeklyDigest}
                    onCheckedChange={(checked) => updateSetting('notifications', 'weeklyDigest', checked)}
                  />
                </div>
              </div>

              <Button onClick={() => handleSave('—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π')}>
                <Save className="mr-2 h-4 w-4" />
                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
              </Button>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="preferences" className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle>–ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</CardTitle>
              <CardDescription>
                –ù–∞—Å—Ç—Ä–æ–π—Ç–µ, –∫–∞–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –≤–∞—Å
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="space-y-4">
                <div className="flex items-center justify-between">
                  <div className="space-y-0.5">
                    <Label htmlFor="autoSaveProjects">–ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤</Label>
                    <p className="text-sm text-muted-foreground">
                      –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ø—Ä–æ–µ–∫—Ç–∞—Ö
                    </p>
                  </div>
                  <Switch
                    id="autoSaveProjects"
                    checked={settings.preferences.autoSaveProjects}
                    onCheckedChange={(checked) => updateSetting('preferences', 'autoSaveProjects', checked)}
                  />
                </div>

                <Separator />

                <div className="flex items-center justify-between">
                  <div className="space-y-0.5">
                    <Label htmlFor="darkMode">–¢–µ–º–Ω–∞—è —Ç–µ–º–∞</Label>
                    <p className="text-sm text-muted-foreground">
                      –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ–º–Ω—É—é —Ç–µ–º—É –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
                    </p>
                  </div>
                  <Switch
                    id="darkMode"
                    checked={settings.preferences.darkMode}
                    onCheckedChange={(checked) => updateSetting('preferences', 'darkMode', checked)}
                  />
                </div>
              </div>

              <Button onClick={() => handleSave('–ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π')}>
                <Save className="mr-2 h-4 w-4" />
                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è
              </Button>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="ai" className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Bot className="h-5 w-5" />
                –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ò–ò –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
              </CardTitle>
              <CardDescription>
                –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ò–ò –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞—Ä—Ç–∏—Å—Ç–∞—Ö, –ª–∏—Ä–∏–∫–∏ –∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="grid gap-6 sm:grid-cols-1 lg:grid-cols-2">
                <div className="space-y-4">
                  <div className="space-y-2">
                    <Label htmlFor="provider">–ü—Ä–æ–≤–∞–π–¥–µ—Ä –ò–ò</Label>
                    <Select
                      value={settings.ai.provider}
                      onValueChange={(value) => updateSetting('ai', 'provider', value)}
                    >
                      <SelectTrigger>
                        <SelectValue />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="openai">OpenAI</SelectItem>
                        <SelectItem value="anthropic">Anthropic (Claude)</SelectItem>
                        <SelectItem value="google">Google (Gemini)</SelectItem>
                        <SelectItem value="cohere">Cohere</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>

                  <div className="space-y-2">
                    <Label htmlFor="model">–ú–æ–¥–µ–ª—å</Label>
                    <Select
                      value={settings.ai.model}
                      onValueChange={(value) => updateSetting('ai', 'model', value)}
                    >
                      <SelectTrigger>
                        <SelectValue />
                      </SelectTrigger>
                      <SelectContent>
                        {settings.ai.provider === 'openai' && (
                          <>
                            <SelectItem value="gpt-4o">GPT-4O</SelectItem>
                            <SelectItem value="gpt-4o-mini">GPT-4O Mini</SelectItem>
                            <SelectItem value="gpt-4-turbo">GPT-4 Turbo</SelectItem>
                          </>
                        )}
                        {settings.ai.provider === 'anthropic' && (
                          <>
                            <SelectItem value="claude-3-opus">Claude 3 Opus</SelectItem>
                            <SelectItem value="claude-3-sonnet">Claude 3 Sonnet</SelectItem>
                            <SelectItem value="claude-3-haiku">Claude 3 Haiku</SelectItem>
                          </>
                        )}
                        {settings.ai.provider === 'google' && (
                          <>
                            <SelectItem value="gemini-pro">Gemini Pro</SelectItem>
                            <SelectItem value="gemini-pro-vision">Gemini Pro Vision</SelectItem>
                          </>
                        )}
                        {settings.ai.provider === 'cohere' && (
                          <>
                            <SelectItem value="command">Command</SelectItem>
                            <SelectItem value="command-light">Command Light</SelectItem>
                          </>
                        )}
                      </SelectContent>
                    </Select>
                  </div>

                  <div className="space-y-2">
                    <Label htmlFor="temperature">–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å (Temperature)</Label>
                    <div className="space-y-2">
                      <Input
                        type="range"
                        min="0"
                        max="1"
                        step="0.1"
                        value={settings.ai.temperature}
                        onChange={(e) => updateSetting('ai', 'temperature', parseFloat(e.target.value))}
                        className="w-full"
                      />
                      <div className="flex justify-between text-xs text-muted-foreground">
                        <span>–ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω–æ (0.0)</span>
                        <span className="font-medium">{settings.ai.temperature}</span>
                        <span>–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ (1.0)</span>
                      </div>
                    </div>
                  </div>

                  <div className="space-y-2">
                    <Label htmlFor="maxTokens">–ú–∞–∫—Å–∏–º—É–º —Ç–æ–∫–µ–Ω–æ–≤</Label>
                    <Input
                      type="number"
                      min="100"
                      max="4000"
                      value={settings.ai.maxTokens}
                      onChange={(e) => updateSetting('ai', 'maxTokens', parseInt(e.target.value))}
                    />
                  </div>
                </div>

                <div className="space-y-4">
                  <div className="space-y-2">
                    <Label htmlFor="customPrompt">–°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç</Label>
                    <Textarea
                      id="customPrompt"
                      value={settings.ai.customPrompt}
                      onChange={(e) => updateSetting('ai', 'customPrompt', e.target.value)}
                      placeholder="–ö–∞—Å—Ç–æ–º–∏–∑–∏—Ä—É–π—Ç–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –ò–ò..."
                      className="min-h-[200px] resize-none"
                    />
                    <p className="text-xs text-muted-foreground">
                      –≠—Ç–æ—Ç –ø—Ä–æ–º–ø—Ç –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö –ò–ò –≥–µ–Ω–µ—Ä–∞—Ü–∏–π
                    </p>
                  </div>

                  <div className="p-4 border border-border rounded-lg bg-muted/50">
                    <h4 className="font-medium mb-2 flex items-center gap-2">
                      <Sparkles className="h-4 w-4" />
                      –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                    </h4>
                    <div className="space-y-2">
                      <Button
                        variant="outline" 
                        size="sm" 
                        className="w-full"
                        onClick={() => {
                          updateSetting('ai', 'customPrompt', '–¢—ã –æ–ø—ã—Ç–Ω—ã–π –º—É–∑—ã–∫–∞–ª—å–Ω—ã–π –ø—Ä–æ–¥—é—Å–µ—Ä –∏ A&R. –ü–æ–º–æ–≥–∏ —Å–æ–∑–¥–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∞—Ä—Ç–∏—Å—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –µ–≥–æ –∏–º–µ–Ω–∏ –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞. –í–∫–ª—é—á–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∂–∞–Ω—Ä–µ, –ª–æ–∫–∞—Ü–∏–∏, –ø—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏–∏, –º—É–∑—ã–∫–∞–ª—å–Ω–æ–º —Å—Ç–∏–ª–µ –∏ –≤–ª–∏—è–Ω–∏—è—Ö.');
                          updateSetting('ai', 'temperature', 0.7);
                        }}
                      >
                        –î–ª—è –∞—Ä—Ç–∏—Å—Ç–æ–≤
                      </Button>
                      <Button
                        variant="outline" 
                        size="sm" 
                        className="w-full"
                        onClick={() => {
                          updateSetting('ai', 'customPrompt', '–¢—ã —Ç–∞–ª–∞–Ω—Ç–ª–∏–≤—ã–π –∞–≤—Ç–æ—Ä –ø–µ—Å–µ–Ω –∏ –ø–æ—ç—Ç. –°–æ–∑–¥–∞–≤–∞–π –∫—Ä–µ–∞—Ç–∏–≤–Ω—É—é –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –ª–∏—Ä–∏–∫—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–∞–¥–∞–Ω–Ω–æ–π —Ç–µ–º—ã, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –∏ —Å—Ç–∏–ª—è.');
                          updateSetting('ai', 'temperature', 0.8);
                        }}
                      >
                        –î–ª—è –ª–∏—Ä–∏–∫–∏
                      </Button>
                      <Button
                        variant="outline" 
                        size="sm" 
                        className="w-full"
                        onClick={() => {
                          updateSetting('ai', 'customPrompt', '–¢—ã –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥ –≤ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–π –∏–Ω–¥—É—Å—Ç—Ä–∏–∏. –°–æ–∑–¥–∞–≤–∞–π –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –æ–ø–∏—Å–∞–Ω–∏—è —Ä–µ–ª–∏–∑–æ–≤ –∏ –ø—Ä–æ–º–æ-—Ç–µ–∫—Å—Ç—ã.');
                          updateSetting('ai', 'temperature', 0.6);
                        }}
                      >
                        –î–ª—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞
                      </Button>
                    </div>
                  </div>
                </div>
              </div>

              <Button onClick={() => handleSave('–ò–ò')}>
                <Save className="mr-2 h-4 w-4" />
                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ò–ò
              </Button>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="security" className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</CardTitle>
              <CardDescription>
                –£–ø—Ä–∞–≤–ª—è–π—Ç–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –∏ –¥–∞–Ω–Ω—ã–º–∏
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="space-y-4">
                <div className="p-4 border border-border rounded-lg">
                  <h4 className="font-medium mb-2">–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç–∞</h4>
                  <p className="text-sm text-muted-foreground mb-4">
                    –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞—â–∏—â–µ–Ω email-–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π —á–µ—Ä–µ–∑ Supabase Auth.
                  </p>
                  <Button variant="outline" size="sm">
                    –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å
                  </Button>
                </div>

                <div className="p-4 border border-border rounded-lg">
                  <h4 className="font-medium mb-2">–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö</h4>
                  <p className="text-sm text-muted-foreground mb-4">
                    –°–∫–∞—á–∞—Ç—å –∫–æ–ø–∏—é –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö, –≤–∫–ª—é—á–∞—è –ø—Ä–æ–µ–∫—Ç—ã, —Ç—Ä–µ–∫–∏ –∏ –ò–ò –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.
                  </p>
                  <Button variant="outline" size="sm">
                    <Database className="mr-2 h-4 w-4" />
                    –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
                  </Button>
                </div>

                <div className="p-4 border border-destructive/20 bg-destructive/5 rounded-lg">
                  <h4 className="font-medium mb-2 text-destructive">–û–ø–∞—Å–Ω–∞—è –∑–æ–Ω–∞</h4>
                  <p className="text-sm text-muted-foreground mb-4">
                    –ù–∞–≤—Å–µ–≥–¥–∞ —É–¥–∞–ª–∏—Ç—å –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –∏ –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.
                  </p>
                  <Button variant="destructive" size="sm">
                    –£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç
                  </Button>
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  );
}